{"ast":null,"code":"var _jsxFileName = \"/Users/nicolaspavon/Desktop/ReposFacu/seguridadFE/src/Screens/Admin.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport \"moment/locale/es\";\nimport { useHistory } from \"react-router-dom\";\nimport { Title } from \"../Components\";\nimport { getUsers } from \"../Utils/api\";\nimport Container from \"./Styles/Container\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Admin = () => {\n  _s();\n\n  const history = useHistory();\n  const user = useState(JSON.parse(localStorage.getItem('user')));\n  const [users, setUsers] = useState([]);\n  const [isAdmin, setIsAdmin] = useState(false);\n  useEffect(() => {\n    if (user) {\n      setIsAdmin(user.admin); // FIXME: admin?\n    }\n  }, []);\n  useEffect(() => {\n    setUsers(getUsers());\n  }, []);\n\n  if (!user || !isAdmin) {\n    // FIXME: token\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexDirection: \"column\",\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n        height: 500\n      },\n      children: [\"No tienes permiso para acceder a esta p\\xE1gina\", /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"large\",\n        color: \"primary\",\n        onClick: () => {\n          history.push(\"/\");\n        },\n        children: \"Regresar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      text: \"Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), DataTable(users), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      size: \"medium\",\n      color: \"primary\",\n      onClick: () => {\n        localStorage.clear();\n      },\n      children: \"Salir\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Admin, \"G58Z2BBDKUpq12/8od0Pv85zyYk=\", false, function () {\n  return [useHistory];\n});\n\n_c = Admin;\nexport default Admin;\nconst columns = [{\n  field: 'id',\n  headerName: 'ID',\n  width: 70\n}, {\n  field: 'firstName',\n  headerName: 'First name',\n  width: 130\n}, {\n  field: 'lastName',\n  headerName: 'Last name',\n  width: 130\n}, {\n  field: 'age',\n  headerName: 'Age',\n  type: 'number',\n  width: 90\n}, {\n  field: 'fullName',\n  headerName: 'Full name',\n  description: 'This column has a value getter and is not sortable.',\n  sortable: false,\n  width: 160,\n  valueGetter: params => `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`\n}];\n\nconst DataTable = rows => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 400,\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 1000,\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = DataTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Admin\");\n$RefreshReg$(_c2, \"DataTable\");","map":{"version":3,"sources":["/Users/nicolaspavon/Desktop/ReposFacu/seguridadFE/src/Screens/Admin.jsx"],"names":["React","useState","useEffect","Button","DataGrid","useHistory","Title","getUsers","Container","Admin","history","user","JSON","parse","localStorage","getItem","users","setUsers","isAdmin","setIsAdmin","admin","flexDirection","display","justifyContent","height","push","DataTable","clear","columns","field","headerName","width","type","description","sortable","valueGetter","params","getValue","rows"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n} from \"@material-ui/core\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport \"moment/locale/es\";\nimport { useHistory } from \"react-router-dom\";\nimport { Title } from \"../Components\";\n\nimport { getUsers } from \"../Utils/api\";\nimport Container from \"./Styles/Container\";\n\nconst Admin = () => {\n  const history = useHistory();\n  const user = useState(JSON.parse(localStorage.getItem('user')));\n  const [users, setUsers] = useState([]);\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  useEffect(() => {\n    if (user) {\n      setIsAdmin(user.admin);// FIXME: admin?\n    }\n  }, []);\n\n  useEffect(() => {\n    setUsers(getUsers());\n  }, []);\n\n  if (!user|| !isAdmin) { // FIXME: token\n    return (\n      <div\n        style={{\n          flexDirection: \"column\",\n          display: \"flex\",\n          justifyContent: \"space-evenly\",\n          height: 500,\n        }}\n      >\n          No tienes permiso para acceder a esta pÃ¡gina\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          color=\"primary\"\n          onClick={() => {\n            history.push(\"/\");\n          }}\n        >\n          Regresar\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <Container>\n        <Title text=\"Admin\" /> \n        {DataTable(users)}\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          size=\"medium\"\n          color=\"primary\"\n          onClick={() => {\n            localStorage.clear();\n          }}\n        >\n          Salir\n        </Button>\n    </Container>\n  );\n};\n\nexport default Admin;\n\n\nconst columns = [\n  { field: 'id', headerName: 'ID', width: 70 },\n  { field: 'firstName', headerName: 'First name', width: 130 },\n  { field: 'lastName', headerName: 'Last name', width: 130 },\n  {\n    field: 'age',\n    headerName: 'Age',\n    type: 'number',\n    width: 90,\n  },\n  {\n    field: 'fullName',\n    headerName: 'Full name',\n    description: 'This column has a value getter and is not sortable.',\n    sortable: false,\n    width: 160,\n    valueGetter: (params) =>\n      `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\n  },\n];\n\n\nconst DataTable = (rows) => {\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid rows={rows} columns={columns} pageSize={1000} checkboxSelection />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}